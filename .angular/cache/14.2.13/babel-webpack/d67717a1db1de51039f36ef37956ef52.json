{"ast":null,"code":"import _classCallCheck from \"/Users/loich/Dev/Repos/playlistify/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/loich/Dev/Repos/playlistify/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isDevMode } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n\nvar Trigger = /*#__PURE__*/function () {\n  /**\n   * @param {?} open\n   * @param {?=} close\n   */\n  function Trigger(open, close) {\n    _classCallCheck(this, Trigger);\n\n    this.open = open;\n    this.close = close || open;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(Trigger, [{\n    key: \"isManual\",\n    value: function isManual() {\n      return this.open === 'manual' || this.close === 'manual';\n    }\n  }]);\n\n  return Trigger;\n}();\n\nif (false) {\n  /** @type {?} */\n  Trigger.prototype.open;\n  /** @type {?} */\n\n  Trigger.prototype.close;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction ListenOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ListenOptions.prototype.target;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.targets;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.triggers;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.outsideClick;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.outsideEsc;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.show;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.hide;\n  /** @type {?|undefined} */\n\n  ListenOptions.prototype.toggle;\n}\n/** @type {?} */\n\n\nvar DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n/* tslint:disable-next-line: no-any */\n\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\n\nfunction parseTriggers(triggers) {\n  var aliases = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ALIASES;\n\n  /** @type {?} */\n  var trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n  /** @type {?} */\n\n\n  var parsedTriggers = trimmedTriggers.split(/\\s+/).map(\n  /**\n  * @param {?} trigger\n  * @return {?}\n  */\n  function (trigger) {\n    return trigger.split(':');\n  }).map(\n  /**\n  * @param {?} triggerPair\n  * @return {?}\n  */\n  function (triggerPair) {\n    /** @type {?} */\n    var alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  /** @type {?} */\n\n  var manualTriggers = parsedTriggers.filter(\n  /**\n  * @param {?} triggerPair\n  * @return {?}\n  */\n  function (triggerPair) {\n    return triggerPair.isManual();\n  });\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} target\n * @param {?} triggers\n * @param {?} showFn\n * @param {?} hideFn\n * @param {?} toggleFn\n * @return {?}\n */\n\n\nfunction listenToTriggers(renderer,\n/* tslint:disable-next-line: no-any */\ntarget, triggers, showFn, hideFn, toggleFn) {\n  /** @type {?} */\n  var parsedTriggers = parseTriggers(triggers);\n  /* tslint:disable-next-line: no-any */\n\n  /** @type {?} */\n\n  var listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach(\n  /**\n  * @param {?} trigger\n  * @return {?}\n  */\n  function (trigger) {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n      return;\n    }\n\n    listeners.push(renderer.listen(target, trigger.open, showFn), renderer.listen(target, trigger.close, hideFn));\n  });\n  return (\n    /**\n    * @return {?}\n    */\n    function () {\n      listeners.forEach(\n      /**\n      * @param {?} unsubscribeFn\n      * @return {?}\n      */\n      function (unsubscribeFn) {\n        return unsubscribeFn();\n      });\n    }\n  );\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\n\n\nfunction listenToTriggersV2(renderer, options) {\n  /** @type {?} */\n  var parsedTriggers = parseTriggers(options.triggers);\n  /** @type {?} */\n\n  var target = options.target; // do nothing\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  } // all listeners\n\n  /* tslint:disable-next-line: no-any */\n\n  /** @type {?} */\n\n\n  var listeners = []; // lazy listeners registration\n\n  /** @type {?} */\n\n  var _registerHide = [];\n  /** @type {?} */\n\n  var registerHide =\n  /**\n  * @return {?}\n  */\n  function registerHide() {\n    // add hide listeners to unregister array\n    _registerHide.forEach(\n    /**\n    * @param {?} fn\n    * @return {?}\n    */\n    function (fn) {\n      return listeners.push(fn());\n    }); // register hide events only once\n\n\n    _registerHide.length = 0;\n  }; // register open\\close\\toggle listeners\n\n\n  parsedTriggers.forEach(\n  /**\n  * @param {?} trigger\n  * @return {?}\n  */\n  function (trigger) {\n    /** @type {?} */\n    var useToggle = trigger.open === trigger.close;\n    /** @type {?} */\n\n    var showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(\n      /**\n      * @return {?}\n      */\n      function () {\n        return renderer.listen(target, trigger.close, options.hide);\n      });\n    }\n\n    listeners.push(renderer.listen(target, trigger.open,\n    /**\n    * @return {?}\n    */\n    function () {\n      return showFn(registerHide);\n    }));\n  });\n  return (\n    /**\n    * @return {?}\n    */\n    function () {\n      listeners.forEach(\n      /**\n      * @param {?} unsubscribeFn\n      * @return {?}\n      */\n      function (unsubscribeFn) {\n        return unsubscribeFn();\n      });\n    }\n  );\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\n\n\nfunction registerOutsideClick(renderer, options) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n  /* tslint:disable-next-line: no-any */\n\n\n  return renderer.listen('document', 'click',\n  /**\n  * @param {?} event\n  * @return {?}\n  */\n  function (event) {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n\n    if (options.targets && options.targets.some(\n    /**\n    * @param {?} target\n    * @return {?}\n    */\n    function (target) {\n      return target.contains(event.target);\n    })) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\n\n\nfunction registerEscClick(renderer, options) {\n  if (!options.outsideEsc) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'keyup.esc',\n  /**\n  * @param {?} event\n  * @return {?}\n  */\n  function (event) {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n\n    if (options.targets && options.targets.some(\n    /**\n    * @param {?} target\n    * @return {?}\n    */\n    function (target) {\n      return target.contains(event.target);\n    })) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * JS version of browser APIs. This library can only run in the browser.\n * @type {?}\n */\n\n\nvar win = typeof window !== 'undefined' && window ||\n/** @type {?} */\n{};\n/** @type {?} */\n\nvar document$1 = win.document;\n/** @type {?} */\n\nvar location = win.location;\n/** @type {?} */\n\nvar gc = win.gc ?\n/**\n* @return {?}\n*/\nfunction () {\n  return win.gc();\n} :\n/**\n* @return {?}\n*/\nfunction () {\n  return null;\n};\n/** @type {?} */\n\nvar performance = win.performance ? win.performance : null;\n/** @type {?} */\n\nvar Event = win.Event;\n/** @type {?} */\n\nvar MouseEvent = win.MouseEvent;\n/** @type {?} */\n\nvar KeyboardEvent = win.KeyboardEvent;\n/** @type {?} */\n\nvar EventTarget = win.EventTarget;\n/** @type {?} */\n\nvar History = win.History;\n/** @type {?} */\n\nvar Location = win.Location;\n/** @type {?} */\n\nvar EventListener = win.EventListener;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar guessedVersion;\n/**\n * @return {?}\n */\n\nfunction _guessBsVersion() {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  /** @type {?} */\n\n\n  var spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  /** @type {?} */\n\n  var rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n/**\n * @param {?} theme\n * @return {?}\n */\n\n\nfunction setTheme(theme) {\n  guessedVersion = theme;\n} // todo: in ngx-bootstrap, bs4 will became a default one\n\n/**\n * @return {?}\n */\n\n\nfunction isBs3() {\n  if (typeof win === 'undefined') {\n    return true;\n  }\n\n  if (typeof win.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n\n    guessedVersion = _guessBsVersion();\n    return guessedVersion === 'bs3';\n  }\n\n  return win.__theme !== 'bs4';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar LinkedList = /*#__PURE__*/function () {\n  function LinkedList() {\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.asArray = []; // Array methods overriding END\n  }\n  /**\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  _createClass(LinkedList, [{\n    key: \"get\",\n    value: function get(position) {\n      if (this.length === 0 || position < 0 || position >= this.length) {\n        return void 0;\n      }\n      /** @type {?} */\n\n\n      var current = this.head;\n\n      for (var index = 0; index < position; index++) {\n        current = current.next;\n      }\n\n      return current.value;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.length;\n\n      if (position < 0 || position > this.length) {\n        throw new Error('Position is out of the list');\n      }\n      /* tslint:disable-next-line: no-any*/\n\n      /** @type {?} */\n\n\n      var node = {\n        value: value,\n        next: undefined,\n        previous: undefined\n      };\n\n      if (this.length === 0) {\n        this.head = node;\n        this.tail = node;\n        this.current = node;\n      } else {\n        if (position === 0) {\n          // first node\n          node.next = this.head;\n          this.head.previous = node;\n          this.head = node;\n        } else if (position === this.length) {\n          // last node\n          this.tail.next = node;\n          node.previous = this.tail;\n          this.tail = node;\n        } else {\n          // node in middle\n\n          /** @type {?} */\n          var currentPreviousNode = this.getNode(position - 1);\n          /** @type {?} */\n\n          var currentNextNode = currentPreviousNode.next;\n          currentPreviousNode.next = node;\n          currentNextNode.previous = node;\n          node.previous = currentPreviousNode;\n          node.next = currentNextNode;\n        }\n      }\n\n      this.length++;\n      this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?=} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.length === 0 || position < 0 || position >= this.length) {\n        throw new Error('Position is out of the list');\n      }\n\n      if (position === 0) {\n        // first node\n        this.head = this.head.next;\n\n        if (this.head) {\n          // there is no second node\n          this.head.previous = undefined;\n        } else {\n          // there is no second node\n          this.tail = undefined;\n        }\n      } else if (position === this.length - 1) {\n        // last node\n        this.tail = this.tail.previous;\n        this.tail.next = undefined;\n      } else {\n        // middle node\n\n        /** @type {?} */\n        var removedNode = this.getNode(position);\n        removedNode.next.previous = removedNode.previous;\n        removedNode.previous.next = removedNode.next;\n      }\n\n      this.length--;\n      this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?} position\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(position, value) {\n      if (this.length === 0 || position < 0 || position >= this.length) {\n        throw new Error('Position is out of the list');\n      }\n      /** @type {?} */\n\n\n      var node = this.getNode(position);\n      node.value = value;\n      this.createInternalArrayRepresentation();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.asArray;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"findAll\",\n    value: function findAll(fn) {\n      /** @type {?} */\n      var current = this.head;\n      /* tslint:disable-next-line: no-any*/\n\n      /** @type {?} */\n\n      var result = [];\n\n      for (var index = 0; index < this.length; index++) {\n        if (fn(current.value, index)) {\n          result.push({\n            index: index,\n            value: current.value\n          });\n        }\n\n        current = current.next;\n      }\n\n      return result;\n    } // Array methods overriding start\n\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"push\",\n    value: function push() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      /* tslint:disable-next-line: no-any*/\n      args.forEach(\n      /**\n      * @param {?} arg\n      * @return {?}\n      */\n      function (arg) {\n        _this.add(arg);\n      });\n      return this.length;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      if (this.length === 0) {\n        return undefined;\n      }\n      /** @type {?} */\n\n\n      var last = this.tail;\n      this.remove(this.length - 1);\n      return last.value;\n    }\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"unshift\",\n    value: function unshift() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      args.reverse();\n      /* tslint:disable-next-line: no-any*/\n\n      args.forEach(\n      /**\n      * @param {?} arg\n      * @return {?}\n      */\n      function (arg) {\n        _this2.add(arg, 0);\n      });\n      return this.length;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) {\n        return undefined;\n      }\n      /** @type {?} */\n\n\n      var lastItem = this.head.value;\n      this.remove();\n      return lastItem;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      /** @type {?} */\n      var current = this.head;\n\n      for (var index = 0; index < this.length; index++) {\n        fn(current.value, index);\n        current = current.next;\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(value) {\n      /** @type {?} */\n      var current = this.head;\n      /** @type {?} */\n\n      var position = 0;\n\n      for (var index = 0; index < this.length; index++) {\n        if (current.value === value) {\n          position = index;\n          break;\n        }\n\n        current = current.next;\n      }\n\n      return position;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"some\",\n    value: function some(fn) {\n      /** @type {?} */\n      var current = this.head;\n      /** @type {?} */\n\n      var result = false;\n\n      while (current && !result) {\n        if (fn(current.value)) {\n          result = true;\n          break;\n        }\n\n        current = current.next;\n      }\n\n      return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"every\",\n    value: function every(fn) {\n      /** @type {?} */\n      var current = this.head;\n      /** @type {?} */\n\n      var result = true;\n\n      while (current && result) {\n        if (!fn(current.value)) {\n          result = false;\n        }\n\n        current = current.next;\n      }\n\n      return result;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '[Linked List]';\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(fn) {\n      /** @type {?} */\n      var current = this.head;\n      /** @type {?} */\n\n      var result;\n\n      for (var index = 0; index < this.length; index++) {\n        if (fn(current.value, index)) {\n          result = current.value;\n          break;\n        }\n\n        current = current.next;\n      }\n\n      return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(fn) {\n      /** @type {?} */\n      var current = this.head;\n      /** @type {?} */\n\n      var result;\n\n      for (var index = 0; index < this.length; index++) {\n        if (fn(current.value, index)) {\n          result = index;\n          break;\n        }\n\n        current = current.next;\n      }\n\n      return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n\n    /**\n     * @protected\n     * @param {?} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNode\",\n    value: function getNode(position) {\n      if (this.length === 0 || position < 0 || position >= this.length) {\n        throw new Error('Position is out of the list');\n      }\n      /** @type {?} */\n\n\n      var current = this.head;\n\n      for (var index = 0; index < position; index++) {\n        current = current.next;\n      }\n\n      return current;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"createInternalArrayRepresentation\",\n    value: function createInternalArrayRepresentation() {\n      /* tslint:disable-next-line: no-any*/\n\n      /** @type {?} */\n      var outArray = [];\n      /** @type {?} */\n\n      var current = this.head;\n\n      while (current) {\n        outArray.push(current.value);\n        current = current.next;\n      }\n\n      this.asArray = outArray;\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nif (false) {\n  /** @type {?} */\n  LinkedList.prototype.length;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  LinkedList.prototype.head;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  LinkedList.prototype.tail;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  LinkedList.prototype.current;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  LinkedList.prototype.asArray;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/*tslint:disable:no-invalid-this */\n\n/* tslint:disable-next-line: no-any */\n\n/**\n * @param {?=} defaultValue\n * @return {?}\n */\n\n\nfunction OnChange(defaultValue) {\n  /** @type {?} */\n  var sufix = 'Change';\n  /* tslint:disable-next-line: no-any */\n\n  return (\n    /**\n    * @param {?} target\n    * @param {?} propertyKey\n    * @return {?}\n    */\n    function OnChangeHandler(target, propertyKey) {\n      /** @type {?} */\n      var _key = \" __\".concat(propertyKey, \"Value\");\n\n      Object.defineProperty(target, propertyKey, {\n        /* tslint:disable-next-line: no-any */\n\n        /**\n         * @return {?}\n         */\n        get: function get() {\n          return this[_key];\n        },\n\n        /* tslint:disable-next-line: no-any */\n\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function set(value) {\n          /** @type {?} */\n          var prevValue = this[_key];\n          this[_key] = value;\n\n          if (prevValue !== value && this[propertyKey + sufix]) {\n            this[propertyKey + sufix].emit(value);\n          }\n        }\n      });\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"reflow\",\n    value:\n    /* tslint:disable-next-line: no-any */\n\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    function reflow(element) {\n      /* tslint:disable-next-line: no-any */\n      (\n      /**\n      * @param {?} bs\n      * @return {?}\n      */\n      function (bs) {\n        return bs;\n      })(element.offsetHeight);\n    } // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n\n    /* tslint:disable-next-line: no-any */\n\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n\n  }, {\n    key: \"getStyles\",\n    value: function getStyles(elem) {\n      // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n      // IE throws on elements created in popups\n      // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\n      /** @type {?} */\n      var view = elem.ownerDocument.defaultView;\n\n      if (!view || !view.opener) {\n        view = win;\n      }\n\n      return view.getComputedStyle(elem);\n    }\n  }]);\n\n  return Utils;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _messagesHash = {};\n/** @type {?} */\n\nvar _hideMsg = typeof console === 'undefined' || !('warn' in console);\n/**\n * @param {?} msg\n * @return {?}\n */\n\n\nfunction warnOnce(msg) {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n\n  console.warn(msg);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { LinkedList, OnChange, Trigger, Utils, document$1 as document, isBs3, listenToTriggers, listenToTriggersV2, parseTriggers, registerEscClick, registerOutsideClick, setTheme, warnOnce, win as window }; //# sourceMappingURL=ngx-bootstrap-utils.js.map","map":null,"metadata":{},"sourceType":"module"}