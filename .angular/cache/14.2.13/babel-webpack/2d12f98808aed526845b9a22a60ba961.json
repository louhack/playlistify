{"ast":null,"code":"import _createClass from \"/Users/loich/Dev/Repos/playlistify/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/loich/Dev/Repos/playlistify/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { OnChange } from 'ngx-bootstrap/utils';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction AlertComponent_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function AlertComponent_ng_template_0_ng_template_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r2.close());\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 3);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 4);\n    ɵngcc0.ɵɵtext(4, \"Close\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n}\n\nfunction AlertComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, AlertComponent_ng_template_0_ng_template_1_Template, 5, 0, \"ng-template\", 0);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(\"alert alert-\" + ctx_r0.type);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.classes);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.dismissible);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar AlertConfig = /*#__PURE__*/(function () {\n  var AlertConfig = /*#__PURE__*/_createClass(function AlertConfig() {\n    _classCallCheck(this, AlertConfig);\n\n    /**\n     * default alert type\n     */\n    this.type = 'warning';\n    /**\n     * is alerts are dismissible by default\n     */\n\n    this.dismissible = false;\n    /**\n     * default time before alert will dismiss\n     */\n\n    this.dismissOnTimeout = undefined;\n  });\n\n  AlertConfig.ɵfac = function AlertConfig_Factory(t) {\n    return new (t || AlertConfig)();\n  };\n  /** @nocollapse */\n\n\n  AlertConfig.ɵprov = ɵɵdefineInjectable({\n    factory: function AlertConfig_Factory() {\n      return new AlertConfig();\n    },\n    token: AlertConfig,\n    providedIn: \"root\"\n  });\n  return AlertConfig;\n})();\n\nif (false) {\n  /**\n   * default alert type\n   * @type {?}\n   */\n  AlertConfig.prototype.type;\n  /**\n   * is alerts are dismissible by default\n   * @type {?}\n   */\n\n  AlertConfig.prototype.dismissible;\n  /**\n   * default time before alert will dismiss\n   * @type {?}\n   */\n\n  AlertConfig.prototype.dismissOnTimeout;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar AlertComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} _config\n   * @param {?} changeDetection\n   */\n  function AlertComponent(_config, changeDetection) {\n    var _this = this;\n\n    _classCallCheck(this, AlertComponent);\n\n    this.changeDetection = changeDetection;\n    /**\n     * Alert type.\n     * Provides one of four bootstrap supported contextual classes:\n     * `success`, `info`, `warning` and `danger`\n     */\n\n    this.type = 'warning';\n    /**\n     * If set, displays an inline \"Close\" button\n     */\n\n    this.dismissible = false;\n    /**\n     * Is alert visible\n     */\n\n    this.isOpen = true;\n    /**\n     * This event fires immediately after close instance method is called,\n     * $event is an instance of Alert component.\n     */\n\n    this.onClose = new EventEmitter();\n    /**\n     * This event fires when alert closed, $event is an instance of Alert component\n     */\n\n    this.onClosed = new EventEmitter();\n    this.classes = '';\n    this.dismissibleChange = new EventEmitter();\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe(\n    /**\n    * @param {?} dismissible\n    * @return {?}\n    */\n    function (dismissible) {\n      _this.classes = _this.dismissible ? 'alert-dismissible' : '';\n\n      _this.changeDetection.markForCheck();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(AlertComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      if (this.dismissOnTimeout) {\n        // if dismissOnTimeout used as attr without binding, it will be a string\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this2.close();\n        }, parseInt(\n        /** @type {?} */\n        this.dismissOnTimeout, 10));\n      }\n    } // todo: animation ` If the .fade and .in classes are present on the element,\n    // the alert will fade out before it is removed`\n\n    /**\n     * Closes an alert by removing it from the DOM.\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.onClose.emit(this);\n      this.isOpen = false;\n      this.changeDetection.markForCheck();\n      this.onClosed.emit(this);\n    }\n  }]);\n\n  return AlertComponent;\n}();\n\nAlertComponent.ɵfac = function AlertComponent_Factory(t) {\n  return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(AlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nAlertComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: AlertComponent,\n  selectors: [[\"alert\"], [\"bs-alert\"]],\n  inputs: {\n    type: \"type\",\n    dismissible: \"dismissible\",\n    isOpen: \"isOpen\",\n    dismissOnTimeout: \"dismissOnTimeout\"\n  },\n  outputs: {\n    onClose: \"onClose\",\n    onClosed: \"onClosed\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [\"role\", \"alert\", 3, \"ngClass\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"]],\n  template: function AlertComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, AlertComponent_ng_template_0_Template, 3, 4, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\n__decorate([OnChange(), __metadata(\"design:type\", Object)], AlertComponent.prototype, \"dismissible\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /**\n   * Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   * @type {?}\n   */\n  AlertComponent.prototype.type;\n  /**\n   * If set, displays an inline \"Close\" button\n   * @type {?}\n   */\n\n  AlertComponent.prototype.dismissible;\n  /**\n   * Number in milliseconds, after which alert will be closed\n   * @type {?}\n   */\n\n  AlertComponent.prototype.dismissOnTimeout;\n  /**\n   * Is alert visible\n   * @type {?}\n   */\n\n  AlertComponent.prototype.isOpen;\n  /**\n   * This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   * @type {?}\n   */\n\n  AlertComponent.prototype.onClose;\n  /**\n   * This event fires when alert closed, $event is an instance of Alert component\n   * @type {?}\n   */\n\n  AlertComponent.prototype.onClosed;\n  /** @type {?} */\n\n  AlertComponent.prototype.classes;\n  /** @type {?} */\n\n  AlertComponent.prototype.dismissibleChange;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  AlertComponent.prototype.changeDetection;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar AlertModule = /*#__PURE__*/(function () {\n  var AlertModule = /*#__PURE__*/function () {\n    function AlertModule() {\n      _classCallCheck(this, AlertModule);\n    }\n\n    _createClass(AlertModule, null, [{\n      key: \"forRoot\",\n      value:\n      /**\n       * @return {?}\n       */\n      function forRoot() {\n        return {\n          ngModule: AlertModule,\n          providers: []\n        };\n      }\n    }]);\n\n    return AlertModule;\n  }();\n\n  AlertModule.ɵfac = function AlertModule_Factory(t) {\n    return new (t || AlertModule)();\n  };\n\n  AlertModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: AlertModule\n  });\n  AlertModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return AlertModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertModule, {\n    declarations: function declarations() {\n      return [AlertComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [AlertComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { AlertComponent, AlertConfig, AlertModule }; //# sourceMappingURL=ngx-bootstrap-alert.js.map","map":null,"metadata":{},"sourceType":"module"}